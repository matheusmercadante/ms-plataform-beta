version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./Containerfile.dev
    # image name
    image: localhost/catalog-api
    # container name
    container_name: catalog-api
    # command: npm run start:debug
    # docker run -t is allow
    tty: true
    # application port, this is take value from env file
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    labels:
      - io.podman.compose.project=catalogapi

    # application environment
    environment:
      SERVICE_NAME: api
      SERVICE_TAGS: development
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_ES_HOST: ${ELASTIC_SEARCH_HOST}:${ELASTIC_SEARCH_PORT}
      ELASTICSEARCH_URL: ${ELASTIC_SEARCH_URL}
    # save (persist) data and also to share data between containers
    volumes:
      - .:/opt/src/ms-plataform/api:Z
      - ./node_modules:/opt/src/ms-plataform/api/node_modules:Z

  elasticsearch:
    image: docker.io/library/elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      # - node.name=elasticsearch
      # - http.port=9200
      # - http.host=0.0.0.0
      # - transport.host=localhost
      # - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=elasticsearch
      # - cluster.initial_master_nodes=elasticsearch
      # - bootstrap.memory_lock=true
      # - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - ./.containers/elasticdata:/var/lib/elasticsearch
    ports:
      - '${ELASTIC_SEARCH_PORT}:${ELASTIC_SEARCH_PORT}'

  kibana:
    image: docker.io/library/kibana:7.12.0
    environment:
      ELASTICSEARCH_HOSTS: ${ELASTIC_SEARCH_URL}
    ports:
      - 5601:5601
